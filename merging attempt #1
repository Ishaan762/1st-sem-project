import time
class Card():
    def __init__(self,name,suit):
        self.name=name
        self.suit=suit
        self.symbols ={"d":"♦", "c":"♣", "h":"♥", "s":"♠"}

    def print_card(self):

        if self.suit=="s":
            symbol="♠"
        #clubs(♣), diamonds(♦), hearts(♥) and spades(♠),
        print(f"{self.name}{self.symbols[self.suit]}")

    def render(self,x,y,pen):
        #Draw the border
        pen.penup()
        pen.goto(x,y)
        pen.color("white")
        pen.goto(x-50,y+75)
        #pen.begin_fill()
        pen.pendown()
        pen.goto(x+50,y+75)
        pen.goto(x+50,y-75)
        pen.goto(x-50,y-75)
        pen.goto(x-50,y+75)
        #pen.end_fill()
        pen.penup()
        if self.name !="":
            #Draw the suit in the middle
            pen.goto(x-20,y-35)
            #pen.color("white")
            #pen.begin_fill()
            pen.write(self.symbols[self.suit],False,font=("Courier New",56,"normal"))
            #pen.end_fill()

            #Draw top left
            pen.goto(x-40,y+45)
            pen.write(self.name,False,font=("Courier New",18,"normal"))
            pen.goto(x-40,y+25)
            pen.write(self.symbols[self.suit],False,font=("Courier New",18,"normal"))

            #Draw bottom right

            pen.goto(x+30,y-55)
            pen.write(self.name, False, font=("Courier New", 18, "normal"))
            pen.goto(x+30,y-75)
            pen.write(self.symbols[self.suit], False, font=("Courier New", 18, "normal"))

'''card=Card("A","S")
card.render(0,0,pen)'''

import turtle
import random

life=5
cards_in_deck={'sa':1,'s2':2,'s3':3,'s4':4,'s5':5,'s6':6,'s7':7,'s8':8,'s9':9,'s10':10,'sj':11,'sq':12,'sk':13,
'ha':1,'h2':2,'h3':3,'h4':4,'h5':5,'h6':6,'h7':7,'h8':8,'h9':9,'h10':10,'hj':11,'hq':12,'hk':13,
'ca':1,'c2':2,'c3':3,'c4':4,'c5':5,'c6':6,'c7':7,'c8':8,'c9':9,'c10':10,'cj':11,'cq':12,'ck':13 ,
'da':1,'d2':2,'d3':3,'d4':4,'d5':5,'d6':6,'d7':7,'d8':8,'d9':9,'d10':10,'dj':11,'dq':12,'dk':13}
# Cards that have not yet been chosen
cards_in_stack={} #Cards that have already been chosen
curr_card=random.choice(list(cards_in_deck.keys())) # Randomly chooses a card from cards_in_deck
cards_in_stack.update({curr_card:cards_in_deck[curr_card]}) # Adds curr_card to the top of cards_in_stack
cards_in_deck.pop(curr_card) # Removes curr_card from the cards_in_deck
rand_card=''

# Game is contained within this loop. The game continues until either life==0 or cards_in_deck is empty
while cards_in_deck and life: 
    print('Cards in deck:',cards_in_deck)
    print('Cards that have been chosen',cards_in_stack)
    print('Life remaining:',life)
    print('Current card:',curr_card)
    n=curr_card[0]
    s=curr_card[1]
    wn=turtle.Screen()
    wn.bgcolor("black")
    wn.setup(800,600)
    wn.title("Deck of cards")
    c=Card(s,n)
    pen=turtle.Turtle()
    pen.hideturtle()
    c.render(0,0,pen)
    c.print_card()
    #pen.speed(0)
    

    #time.sleep(3)

    choice=input('Enter h for higher or l for lower: ')
    rand_card=random.choice(list(cards_in_deck.keys()))
    pen.clear()
    if choice=='h' or choice=='H':
        if cards_in_stack[curr_card]<=cards_in_deck[rand_card]:
            print('You guessed correctly!')
        else:
            print('You guessed wrong! You lose a life. The card was',rand_card)
            life-=1
            print()
            continue
    elif choice=='l' or choice=='L':
        if cards_in_stack[curr_card]<cards_in_deck[rand_card]:
            print('You guessed wrong! You lose a life. The card was',rand_card)
            life-=1
            print()
            continue
        else:
            print('You guessed correctly!')
    print('The card was',rand_card)
    curr_card=rand_card # curr_card becomes rand_card
    cards_in_stack.update({curr_card:cards_in_deck[curr_card]}) # curr_card is added to cards_in_stack
    cards_in_deck.pop(curr_card) # remove curr_card (which was rand_card previously) from cards_in_deck
    print()

if life==0:
    print('Game over')
    print('Score:',len(cards_in_stack))
else:
    print('You win!')
